stages:
  - test
  - build
  - deploy

realizar_testes:
  stage: test
  image: node:17-alpine3.14
  before_script:
    - cd app/
    - npm install 
  script:
    - npm test
  ##gerar relatório
  artifacts:
  ##gerar sempre
    when: always
    reports:
    ##onde vai gerar com o padrão de xml
      junit: app/junit.xml
build_images:
  stage: build
  needs:
    - realizar_testes
  image: docker:20.10.16
  services:
  ##dind é obrigatório para uso de serviço
    - docker:20.10.16-dind

  variables:
    DOCKER_TLS_CERTFIR: "/certs"
  ##executar docker no docker precisa da imagem e do serviço com a versão e também da variável com o diretório dos certificados
  
  before_script:
  ##antes do script passar as variáveis criadas no gitlab com o usuário e a senha definidas nas respectivas variáveis, -u de usuário e -p de password, começando com cifrão
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS

  script:
  ##especifica o usuário e onde está o app, como está na raíz é específicada com ponto 
    - docker build -t $REGISTRY_USER/gitlab-cicd-node:1.0  .
    - docker push $REGISTRY_USER/gitlab-cicd-node:1.0
##deploy no desenvolvimento
deploy_dev:
  stage: deploy
  needs: 
    - build_images
  tags:
    - gcp
  script:
  ##só é necessário dar docker login se as imagens forem privadas
    ##-d para executar em segundo plano
    - docker run -d --name nodeapp -p 3000:3000 $REGISTRY_USER/gitlab-cicd-node:1.0